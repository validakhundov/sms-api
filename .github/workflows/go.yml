name: SMS API Action

on:
  push:
    branches:
      - master

env:
  APP_NAME: sms-api
  AWS_REGION: eu-west-1
  AWS_ECR_REPOSITORY_NAME: example-repo
  AWS_EKS_CLUSTER_NAME: example-cluster
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    name: Deploy to Amazon EKS
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Unit test
        run: go test -v ./...

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build
        id: build-image
        env:
          CONTAINER_URL: ${{ steps.login-ecr.outputs.registry }}/${{ env.AWS_ECR_REPOSITORY_NAME }}:${{ github.sha }}
        run: |
          docker build -t $CONTAINER_URL .
          docker push $CONTAINER_URL
          echo "::set-output name=image::$CONTAINER_URL"

      - name: Deploy
        env:
          IMAGE_NAME: ${{ steps.build-image.outputs.image }}
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name $AWS_EKS_CLUSTER_NAME
          curl -s -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
          ./kustomize edit set image $APP_NAME=$IMAGE_NAME
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$APP_NAME